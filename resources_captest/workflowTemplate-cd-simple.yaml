apiVersion: argoproj.io/v1alpha1
kind: WorkflowTemplate
metadata:
  name: cd-simple
spec:
  arguments:
    # Any params you want to pass into the workflow from the sensor should be listed here
    # Pass them into templates like this: "{{workflow.parameters.GIT_REPO}}"
    parameters:
      - name: GITHUB_JSON
      - name: ARGOCD_APP
      - name: ARGOCD_SERVER
      - name: SLACK_HOOK_URL
        value: 'https://hooks.slack.com/services/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'
  entrypoint: cd-steps
  templates:

    - name: cd-steps
      steps:
      - - name: slack-announce-start-deployment
          templateRef:
            name: argo-hub.slack.0.0.1
            template: send-message
          arguments:
            parameters:
            - name: SLACK_HOOK_URL
              value: "{{workflow.parameters.SLACK_HOOK_URL}}"
            - name: SLACK_TEXT
              value: "Starting deployment of Argo CD app '{{workflow.parameters.ARGOCD_APP}}'"
      - - name: get-github-info
          templateRef:
            # name: argo-hub.github.0.0.2
            # template: extract-webhook-variables
            name: codefresh.github
            template: get-github-info
          arguments:
            parameters:
            - name: GITHUB_JSON
              value: "{{workflow.parameters.GITHUB_JSON}}"
      - - name: log-info
          template: log-info
          arguments:
            parameters:
            - name: INFO
              value: "{{workflow.outputs.parameters.CF_REPO_OWNER}}/{{workflow.outputs.parameters.CF_REPO_NAME}}"
              # value: "{{workflow.parameters}}"
      # - - name: argocd-sync
      #     templateRef:
      #       name: codefresh.argo-library
      #       template: argocd-sync
      #     arguments:
      #       parameters:
      #       - name: APP
      #         # value: multiservice-test
      #         value: "{{workflow.parameters.ARGOCD_APP}}"
      #       - name: SERVER
      #         # value: argocd-server.captest
      #         value: "{{workflow.parameters.ARGOCD_SERVER}}"
      #       - name: WAIT_FLAGS
      #         value: "--health"
      - - name: argocd-sync
          templateRef:
            name: argo-hub.argocd.0.0.1
            template: sync
          arguments:
            parameters:
            - name: app
              value: "{{workflow.parameters.ARGOCD_APP}}"
            - name: serverUrl
              value: "{{workflow.parameters.ARGOCD_SERVER}}"
            - name: flags
              value: "--insecure --plaintext"
      - - name: wait
          templateRef:
            name: argo-hub.argocd.0.0.1
            template: wait
          arguments:
            parameters:
            - name: app
              value: "{{workflow.parameters.ARGOCD_APP}}"
            - name: serverUrl
              value: "{{workflow.parameters.ARGOCD_SERVER}}"
            - name: flags
              value: '--health --insecure --plaintext'
      # - - name: canary-test
      #     template: service-test
      # - - name: slack-announce-finish-deployment
      #     template: slack-notfier

    - name: log-info
      inputs:
        parameters:
          - name: INFO
      script:
        image: alpine:latest
        command: ["/bin/sh"]
        env:
          - name: INFO
            value: "{{ inputs.parameters.INFO }}"
        source: |
          set -e
          echo ${INFO}
